variables:
  SSH_CONFIG: >
    Host server
      HostName royalchess100.com
      User chess
      IdentityFile ~/.ssh/key
      StrictHostKeyChecking no

  DEPLOY_PATH: /var/www/chess

stages:
  - build-engine
  - build-app
  - build-desktop
  - deploy-app

build-engine-wasm:
  stage: build-engine
  image: emscripten/emsdk:2.0.18
  script:
    - export EM_CACHE=$PWD/emscripten-cache
    - mkdir -p "$EM_CACHE"
    - mkdir engine-wasm
    - cd engine
    - make -j$(nproc) ARCH=wasm clean build
    - mv royal100.{js,wasm,worker.js} ../engine-wasm/
  artifacts:
    expire_in: 20 minutes
    paths:
      - engine-wasm
  cache:
    key: engine-wasm-${CI_COMMIT_REF_SLUG}
    paths:
      - emscripten-cache

build-app-browser:
  stage: build-app
  image: node:lts
  needs:
    - build-engine-wasm
  script:
    - npm install -g pnpm
    - pnpm config set store-dir $PWD/.pnpm-store
    - cp -r engine-wasm/* chess-ui/public/engine/
    - cd chess-ui
    - pnpm install
    - pnpm build
  artifacts:
    expire_in: 20 minutes
    paths:
      - chess-ui/build
  cache:
    key: browser-${CI_COMMIT_REF_SLUG}
    paths:
      - .pnpm-store/

build-app-desktop:
  stage: build-desktop
  image: golang
  needs:
    - build-app-browser
  script:
    - mv desktop royal100
    - cp -r chess-ui/build royal100/
    - bash royal100/build.sh
    - mv royal100/apps .
  artifacts:
    expire_in: 1 week
    paths:
      - apps

deploy-app-browser:
  stage: deploy-app
  image: alpine
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  needs:
    - build-app-browser
  script:
    - apk update
    - apk add brotli openssh-client rsync
    - cd chess-ui
    - find build/ -type f -exec brotli --best --keep '{}' +
    - mkdir -p ~/.ssh
    - echo "$SSH_DEPLOY_KEY" >~/.ssh/key
    - chmod 400 ~/.ssh/key
    - echo "$SSH_CONFIG" >~/.ssh/config
    - rsync
      --archive
      --itemize-changes
      --compress
      --delete-delay
      --delay-updates
      --checksum
      build/
      server:"$DEPLOY_PATH"/
